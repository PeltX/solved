//2775, 부녀회장이 될테야 20240716
#include<iostream>

using namespace std;

int main()
{
	int T, k, n, tmp, sum=0;

	cin >> T;
	
	int arr[15][15]; //최대 15층 14호
	
	for (int x = 0; x < T; x++)
	{
		cin >> k >> n;

		for (int i = 0; i <= k; i++) //0호는 존재하지 않음(편하게 생각하기 위해 비워두었다.)
			arr[i][0] = 0;

		for (int i = 1; i <= k; i++) //각 층의 1호 => 1명
			arr[i][1] = 1;
		for (int i = 1; i <= n; i++) //0층의 1호~N호 -> N명
			arr[0][i] = i;

		//한 층씩 쌓아올리기
		for (int i = 1; i <= k; i++)
		{
			for (int j = 1; j <= n; j++)
				arr[i][j] = arr[i][j - 1] + arr[i - 1][j];
		}

		cout << arr[k][n] << '\n';
	}
}

/*
K층의 N호에 사람들의 수를 H(K, N)이라 하면, H(K, N) = H(K, N-1) + H(K-1, N)이다.
0층의 1호~N호(1~N명)와, 0층~K층의 1호(1명)를 축으로 삼아 계산하면 된다.
이 아이디어를 떠올렸다면 쉬운 문제. 그러나 떠올리지 못했다면 B1 문제 치고는 어려웠을 듯하다.
층과 호수가 나오면 일단 2차원 배열을 떠올려 보도록 하자. 다만, 10250(ACM 호텔) 문제처럼, 꼭 2차원 배열이 사용되지 않는 경우도 있으니 아이디어 중 하나로 잡아만 두고 시작하자..!
*/